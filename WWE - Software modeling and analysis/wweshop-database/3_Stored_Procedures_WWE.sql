-- 1. Процедура за получаване на броя на продуктите във всяка категория

CREATE PROCEDURE CATEGORY_PRODUCT_COUNT
AS
BEGIN
    SELECT CATEGORY_NAME, COUNT(PRODUCT_ID) AS PRODUCT_COUNT
    FROM CATEGORY C
    JOIN PRODUCT P ON C.CATEGORY_ID = P.CATEGORY_ID
    GROUP BY CATEGORY_NAME;
END;

-- Изпълнение на процедурата
EXEC CATEGORY_PRODUCT_COUNT;



-- 2. Процедура за получаване на общия брой поръчки и средната стойност на поръчката за клиент

CREATE PROCEDURE GET_CUSTOMER_ORDER_STATS
    @CUSTOMER_ID INT,
    @ORDER_COUNT INT OUTPUT,
    @AVG_ORDER_VALUE DECIMAL(10,2) OUTPUT
AS
BEGIN
    SELECT @ORDER_COUNT = COUNT(ORDER_ID)
    FROM ORDER_HEADER
    WHERE CUSTOMER_ID = @CUSTOMER_ID;

    SELECT @AVG_ORDER_VALUE = AVG(TOTAL_AMOUNT)
    FROM ORDER_HEADER
    WHERE CUSTOMER_ID = @CUSTOMER_ID;
END;

-- Usage
DECLARE @TOTAL_ORDERS INT, @AVG_ORDER DECIMAL(10,2);
EXEC GET_CUSTOMER_ORDER_STATS 1, @TOTAL_ORDERS OUTPUT, @AVG_ORDER OUTPUT;
PRINT 'Total Orders: ' + CAST(@TOTAL_ORDERS AS VARCHAR);
PRINT 'Average Order Value: $' + CAST(@AVG_ORDER AS VARCHAR);


-- 3. Процедура за получаване на броя клиенти по град

CREATE PROCEDURE CUSTOMER_COUNT_BY_CITY
AS
BEGIN
    SELECT CITY, COUNT(CUSTOMER_ID) AS CUSTOMER_COUNT
    FROM CUSTOMER C
    JOIN ADDRESS A ON C.ADDRESS_ID = A.ADDRESS_ID
    GROUP BY CITY;
END;

-- Изпълнение на процедурата
EXEC CUSTOMER_COUNT_BY_CITY;


-- 4. Процедура за изброяване на поръчки с подробности за продукта и клиента

CREATE PROCEDURE ORDER_DETAILS
AS
BEGIN
    SELECT OH.ORDER_ID, OH.ORDER_DATE, C.FIRST_NAME + ' ' + C.LAST_NAME AS CUSTOMER_NAME,
           P.PRODUCT_NAME, OI.QUANTITY, OI.UNIT_PRICE * OI.QUANTITY AS TOTAL_AMOUNT
    FROM ORDER_HEADER OH
    JOIN ORDER_ITEM OI ON OH.ORDER_ID = OI.ORDER_ID
    JOIN CUSTOMER C ON OH.CUSTOMER_ID = C.CUSTOMER_ID
    JOIN PRODUCT P ON OI.PRODUCT_ID = P.PRODUCT_ID
    ORDER BY OH.ORDER_DATE DESC;
END;

-- Изпълнение на процедурата
EXEC ORDER_DETAILS;
